---
- name: configure argocd namespace
  kubernetes.core.k8s:
    host: "{{ hostvars[item]['_api_url'] }}"
    api_key: "{{ openshift_auth_results['results'][cluster_index]['openshift_auth']['api_key'] }}"
    validate_certs: false
    resource_definition: "{{ lookup('file', 'namespace.yml') | from_yaml }}"
  failed_when: false

- name: configure argocd operatorgroup
  kubernetes.core.k8s:
    host: "{{ hostvars[item]['_api_url'] }}"
    api_key: "{{ openshift_auth_results['results'][cluster_index]['openshift_auth']['api_key'] }}"
    validate_certs: false
    resource_definition: "{{ lookup('file', 'operatorgroup.yml') | from_yaml }}"

- name: configure argocd subscription
  kubernetes.core.k8s:
    host: "{{ hostvars[item]['_api_url'] }}"
    api_key: "{{ openshift_auth_results['results'][cluster_index]['openshift_auth']['api_key'] }}"
    validate_certs: false
    resource_definition: "{{ lookup('file', 'subscription.yml') | from_yaml }}"

- name: wait for ArgoCD to start deploying
  ansible.builtin.pause:
    echo: no
    prompt: "Waiting for ArgoCD to start deploying"
    seconds: 30

- name: configure argocd cluster role binding
  kubernetes.core.k8s:
    host: "{{ hostvars[item]['_api_url'] }}"
    api_key: "{{ openshift_auth_results['results'][cluster_index]['openshift_auth']['api_key'] }}"
    validate_certs: false
    resource_definition: "{{ lookup('file', 'clusterrolebinding.yml') | from_yaml }}"

- name: configure argocd repo
  kubernetes.core.k8s:
    host: "{{ hostvars[item]['_api_url'] }}"
    api_key: "{{ openshift_auth_results['results'][cluster_index]['openshift_auth']['api_key'] }}"
    validate_certs: false
    resource_definition: "{{ lookup('file', 'repo.yml') | from_yaml }}"

- name: configure argocd initial application
  kubernetes.core.k8s:
    host: "{{ hostvars[item]['_api_url'] }}"
    api_key: "{{ openshift_auth_results['results'][cluster_index]['openshift_auth']['api_key'] }}"
    validate_certs: false
    resource_definition: "{{ lookup('file', 'application.yml') | from_yaml }}"
