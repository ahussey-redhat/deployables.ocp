---
# tasks file for gitlab
- name: Configure registry auth
  ansible.builtin.file:
    path: /root/.docker
    state: directory
    owner: root
    group: root
    mode: u=rwX,g=rwX,o=-

- name: Configure pull-secret
  ansible.builtin.copy:
    remote_src: true
    src: /etc/containers/auth.json
    dest: /root/.docker/config.json
    owner: root
    group: root
    mode: u=rwX,g=rwX,o=-

- name: Deploy GitLab
  ansible.builtin.import_role:
    name: redhat.rhel_system_roles.podman

- name: Wait until HTTP status is 200
  ansible.builtin.uri:
    url: "http://{{ inventory_hostname }}:8444/users/sign_in"
    return_content: yes
    validate_certs: no
    status_code:
      - 200
  register: gitlab_curl
  until: gitlab_curl.status == 200
  retries: 60
  delay: 10

- name: Create access token
  ansible.builtin.uri:
    url: http://{{ groups['witness'][0] }}:8444/oauth/token
    method: POST
    body: grant_type=password&username=root&password={{ gitlab_root_password }}
  register: gitlab_oauth
  tags:
    - gitlab-projects
  become: false

- name: List projects
  ansible.builtin.uri:
    url: "http://{{ groups['witness'][0] }}:8444/api/v4/projects"
    headers:
      Authorization: "Bearer {{ gitlab_oauth.json.access_token }}"
  register: gitlab_projects
  tags:
    - gitlab-projects
  become: false

- name: Create gitops project
  ansible.builtin.uri:
    url: "http://{{ groups['witness'][0] }}:8444/api/v4/projects"
    status_code:
      - 200
      - 201
    method: POST
    headers:
      Authorization: "Bearer {{ gitlab_oauth.json.access_token }}"
    body_format: json
    body:
      name: deployables-gitops
      default_branch: main
      initialize_with_readme: true
      description: "Stores artefacts required for ArgoCD"
      visibility: public
  when: "gitlab_projects.json | length == 0"
  register: gitlab_gitops_project
  tags:
    - gitlab-projects
  become: false

- name: Ensure gitops repo is available locally
  ansible.builtin.git:
    repo: "http://oauth2:{{ gitlab_oauth.json.access_token }}@{{ groups['witness'][0] }}:8444/root/deployables-gitops.git"
    dest: /home/ansible/deployables-gitops
    version: main
    force: false
    update: false
  tags:
    - gitlab-projects
  become: false
  register: gitops_repo_clone

- name: Create content in gitops repo
  ansible.builtin.copy:
    dest: /home/ansible/deployables-gitops
    directory_mode: u=rwX,g=rwX,o=rX
    group: ansible
    owner: ansible
    mode: u=rwX,g=rwX,o=rX
    src: gitops-repo/
  when: gitops_repo_clone.changed
  tags:
    - gitlab-projects
  become: false

- name: Create directories for templates in deployables-gitops repo
  ansible.builtin.file:
    path: /home/ansible/deployables-gitops/{{ item.path }}
    state: directory
  with_community.general.filetree: "{{ role_path }}/templates/gitops-repo/"
  when:
    - "item.state == 'directory'"
    - gitops_repo_clone.changed
  tags:
    - gitlab-projects
  become: false

- name: Template files in deployables-gitops repo
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: /home/ansible/deployables-gitops/{{ item.path }}
  with_community.general.filetree: "{{ role_path }}/templates/gitops-repo/"
  when:
    - "item.state == 'file'"
    - gitops_repo_clone.changed
  tags:
    - gitlab-projects
  become: false

- name: Push changes to repo
  ansible.builtin.shell: |
    cd /home/ansible/deployables-gitops
    git config user.name "ansible"
    git config user.email "ansible@{{ unid }}.{{ base_domain }}"
    git add --all
    git commit -m "Base content"
    git push -u origin main
  when: gitops_repo_clone.changed
  tags:
    - gitlab-projects
  become: false