---
- name: Ensure cluster configuration directory exists
  ansible.builtin.file:
    path: "/home/ansible/{{ hostvars[item]['cluster_name'] }}"
    owner: ansible
    group: ansible
    mode: u=rwX,g=rwX,o=-
    state: directory
  become: false
  loop: "{{ groups['clusters'] }}"

# https://docs.openshift.com/container-platform/4.14/installing/installing_bare_metal_ipi/ipi-install-installation-workflow.html
- name: Ensure all required packages are installed
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  loop:
    - libvirt
    - qemu-kvm
    - mkisofs
    - python3-devel
    - jq
    - ipmitool
    - /usr/bin/nmstatectl
  become: true

- name: Configure ImageContentSourcePolicy to pull binaries
  ansible.builtin.copy:
    content: |
      ---
      apiVersion: operator.openshift.io/v1alpha1
      kind: ImageContentSourcePolicy
      metadata:
        name: release-0
      spec:
        repositoryDigestMirrors:
        - mirrors:
          - {{ groups['witness'][0] }}:8443/openshift/release
          source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
        - mirrors:
          - {{ groups['witness'][0] }}:8443/openshift/release-images
          source: quay.io/openshift-release-dev/ocp-release
    dest: /home/ansible/icsp.yaml
    owner: ansible
    group: ansible
    mode: u=rwX,g=rwX,o=rX

- name: Pull binaries (from mirror registry)
  ansible.builtin.shell:
    cmd: |
      /usr/local/bin/oc adm release extract --insecure --command=openshift-install --icsp-file=./icsp.yaml "$(hostname -f):8443/openshift/release-images:{{ openshift_version }}-x86_64"
      mv openshift-install /usr/local/bin/openshift-install
      chown root:root /usr/local/bin/openshift-install
      chmod +x /usr/local/bin/openshift-install
    creates: /usr/local/bin/openshift-install

- name: Ensure the Ansible user has correct permissions for libvirt
  ansible.builtin.user:
    name: ansible
    groups: libvirt

- name: Ensure firewalld allows http service
  ansible.posix.firewalld:
    immediate: true
    permanent: true
    service: http
    state: enabled
  become: true

- name: Ensure libvirt storage pool is defined
  community.libvirt.virt_pool:
    name: default
    command: define
    xml: "{{ lookup('template', 'storage_pool.xml') }}"
  become: true

- name: Ensure libvirt storage pool is active
  community.libvirt.virt_pool:
    name: default
    state: active
    autostart: true
  become: true

- name: Ensure network interfaces are configured
  ansible.builtin.import_role:
    name: redhat.rhel_system_roles.network

- name: Get mirror registry CA certificate
  ansible.builtin.shell:
    cmd: |
      openssl s_client -showcerts -verify 1 \
      -connect {{ groups['witness'][0] }}:8443 < /dev/null 2> /dev/null \
      | awk '/BEGIN CERTIFICATE/&&++k==2,/END CERTIFICATE/'
  register: mirror_registry_certificate

- name: Create pull-secret
  ansible.builtin.set_fact:
    _pull_secret: "{\"auths\": {\"{{ groups['witness'][0] }}:8443\": {\"auth\": \"{{('init:' + mirror_registry_init_password) | b64encode }}\", \"email\": \"\"}}}"
  no_log: true

- name: Get install-config-agent template
  ansible.builtin.set_fact:
    _install_config: "{{ lookup('template', 'install-config-agent.yaml') | from_yaml }}"
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups['clusters'] }}"

- name: Define additionalTrustBundle fact
  ansible.builtin.set_fact:
    _append_dict:
      additionalTrustBundle: |
        {{ mirror_registry_certificate.stdout }}
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups['clusters'] }}"

- name: Modify install-config template to include additionalTrustBundle
  ansible.builtin.set_fact:
      _install_config: "{{ hostvars[item]['_install_config'] | combine(hostvars[item]['_append_dict']) }}"
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups['clusters'] }}"

- name: Ensure install-config.yaml exists
  ansible.builtin.copy:
    content: "{{ hostvars[item]['_install_config'] | to_nice_yaml }}"
    dest: "/home/ansible/{{ hostvars[item]['cluster_name'] }}/install-config.yaml"
    owner: ansible
    group: ansible
    mode: u=rwX,g=rwX,o=-
  become: false
  loop: "{{ groups['clusters'] }}"

- name: Ensure agent-config.yaml exists (agent)
  ansible.builtin.copy:
    content: "{{ lookup('template', 'agent-config.yaml') }}"
    dest: "/home/ansible/{{ hostvars[item]['cluster_name'] }}/agent-config.yaml"
    owner: ansible
    group: ansible
    mode: u=rwX,g=rwX,o=-
  become: false
  loop: "{{ groups['clusters'] }}"
