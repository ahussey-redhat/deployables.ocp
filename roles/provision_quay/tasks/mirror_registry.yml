---
- name: Configure mirror registry directory
  ansible.builtin.file:
    path: /home/ansible/mirror_registry
    mode: u=rwX,g=rwX,o=-
    owner: root
    group: root
    state: directory
  become: true

- name: Copy over image archive for initial import
  ansible.builtin.copy:
    src: archive/mirror_seq1_000000.tar
    dest: /home/ansible/
    mode: u=rwX,g=rwX,o=rX
    owner: ansible
    group: ansible
  become: false

- name: Deploy the mirror registry
  ansible.builtin.shell:
    cmd: |
      /usr/local/bin/mirror-registry install \
      --quayHostname {{ inventory_hostname }} \
      --quayRoot /home/ansible/mirror_registry \
      --initUser init \
      --initPassword "{{ mirror_registry_init_password }}"
      --sslCheckSkip \
      --no-color
    creates: /home/ansible/mirror_registry/quay-rootCA
  become: true

- name: Configure local registry
  ansible.builtin.copy:
    content: |
      [[registry]]
      prefix = "registry.redhat.io"
      location = "witness-node.uotest01.poc.lab.local:8443"

      [[registry]]
      prefix = "registry.access.redhat.com"
      location = "witness-node.uotest01.poc.lab.local:8443"
    dest: /etc/containers/registries.conf.d/010-mirror-registry.conf
    owner: root
    group: root
    mode: u=rwX,g=rX,o=rX

- name: Push oc-mirror content to the mirror registry
  ansible.builtin.shell:
    cmd: >-
      /usr/bin/podman login https://{{ inventory_hostname }}:8443 
      --tls-verify=false 
      --username init 
      --password "{{ mirror_registry_init_password }}" && 
      /usr/local/bin/oc-mirror 
      --dest-skip-tls 
      --from=/home/ansible/mirror_seq1_000000.tar 
      docker://{{ inventory_hostname }}:8443
    creates: /home/ansible/oc-mirror-workspace/publish/.metadata.json
  become: false
  tags:
   - mirror-push

- name: Message
  ansible.builtin.debug:
    msg: |
      You now need to create a pull-secret, by logging into the
      mirror registry -> Account Settings -> Create encrypted password
      -> Docker Configuration -> View init-auth.json.

      Encrypt this as an Ansible Vault variable called "pull_secret".
