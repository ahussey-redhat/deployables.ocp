---
# tasks file for create_build_node_iso
- name: Ensure Ventoy is available
  ansible.builtin.copy:
    src: "{{ lookup('env', 'PWD') }}/{{ artifact_directory }}/ventoy.tar.gz"
    dest: "/var/tmp/ventoy.tar.gz"
  become: false

- name: Ensure Ventory directory exists
  ansible.builtin.file:
    path: /opt/ventoy
    state: directory

- name: Untar the Ventoy
  ansible.builtin.unarchive:
    creates: "/opt/ventoy/Ventoy2Disk.sh"
    dest: "/opt/ventoy"
    mode: u=rwx,g=rwx,o=rx
    owner: root
    group: root
    remote_src: true
    src: "/var/tmp/ventoy.tar.gz"
    extra_opts:
      - '--strip-components=2'

- name: Set Ventoy working directoy fact
  ansible.builtin.set_fact: 
    ventoy_working_dir: "/run/media/{{ lookup('env', 'USER') }}/Ventoy"
  become: false

- name: Ensure ventoy directory exists
  ansible.builtin.file:
    path: "{{ ventoy_working_dir }}/ventoy"
    state: directory
  become: false

- name: Ensure ventoy config is available
  ansible.builtin.copy:
    content: "{{ lookup('template', 'ventoy.json') }}"
    dest: "{{ ventoy_working_dir }}/ventoy/ventoy.json"
    mode: u=rwX,g=rwX,o=-
  become: false

- name: Ensure RHEL9 ISO is available locally
  ansible.builtin.uri:
    url: "{{ rhel9_iso_url }}"
    mode: u=rwX,g=rwX,o=-
    dest: "{{ ventoy_working_dir }}"
    decompress: false
    creates: "{{ ventoy_working_dir }}/rhel-9.3-x86_64-dvd.iso"
  become: false

- name: Ensure the kickstart file is available
  ansible.builtin.copy:
    content: "{{ lookup('template', 'ks.cfg') }}"
    dest: "{{ ventoy_working_dir }}/ventoy/ks.cfg"
    mode: u=rwX,g=rwX,o=-
  become: false

- name: Ensure the isolinux/isolinux.cfg file is available
  ansible.builtin.copy:
    content: "{{ lookup('file', 'isolinux.cfg') }}"
    dest: "{{ ventoy_working_dir }}/ventoy/isolinux.cfg"
    mode: u=rwX,g=rwX,o=-
  become: false

- name: Ensure the isolinux/grub.cfg file is available
  ansible.builtin.copy:
    content: "{{ lookup('file', 'isolinux-grub.conf') }}"
    dest: "{{ ventoy_working_dir }}/ventoy/isolinux-grub.conf"
    mode: u=rwX,g=rwX,o=-
  become: false

- name: Ensure the efi/boot/grub.cfg file is available
  ansible.builtin.copy:
    content: "{{ lookup('file', 'efi-boot-grub.cfg') }}"
    dest: "{{ ventoy_working_dir }}/ventoy/efi-boot-grub.cfg"
    mode: u=rwX,g=rwX,o=-
  become: false


- name: Ensure dependencies directory exists
  ansible.builtin.file:
    path: "{{ ventoy_working_dir }}/dependencies"
    state: directory
  become: false

- name: Ensure test content resides in the dependencies directory
  ansible.builtin.copy:
    content: |
      This is a test for copying of the dependencies automatically
    dest: "{{ ventoy_working_dir }}/dependencies/test.txt"
  become: false

- name: Final
  ansible.builtin.debug:
    msg: |
      The USB is ready.
      Please plug it into the witness node, and power on the witness node.
