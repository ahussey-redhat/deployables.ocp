---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: {{ vm_name }}
  namespace: {{ vm_project }}
  labels:
    app: {{ vm_name }}
    vm.kubevirt.io/template: rhel8-server-medium
    vm.kubevirt.io/template.namespace: openshift
    vm.kubevirt.io/template.revision: '1'
    vm.kubevirt.io/template.version: v0.26.0
spec:
  dataVolumeTemplates:
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        creationTimestamp: null
        name: {{ vm_name }}
      spec:
        source:
          registry:
            url: 'docker://{{ groups['witness'][0] }}:8443/rhel8/rhel-guest-image:latest'
            pullMethod: node
        storage:
          resources:
            requests:
              storage: 30Gi
  running: true
  template:
    metadata:
      annotations:
        vm.kubevirt.io/flavor: medium
        vm.kubevirt.io/os: rhel8
        vm.kubevirt.io/workload: server
      creationTimestamp: null
      labels:
        kubevirt.io/domain: {{ vm_name }}
        kubevirt.io/size: medium
    spec:
      architecture: amd64
      domain:
        cpu:
          cores: {{ vm_cpu | default('4') }}
          sockets: 1
          threads: {{ vm_cpu | default('4') }}
        devices:
          disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
          interfaces:
{% if vm_enable_default_network %}
            - masquerade: {}
              model: e1000e
              name: default
{% endif %}
{% if vm_networks is defined %}
{% for interface in vm_networks %}
{% if interface.type == "bridge" %}
            - bridge: {}
              model: e1000e
{% if interface.mac is defined %}
              macAddress: {{ interface.mac }}
{% else %}
              macAddress: '{{ '52:54:00' | community.general.random_mac(seed=inventory_hostname + interface.source_vlan|string) }}'
{% endif %}
              name: nic{{ loop.index0 | string }}-{{ interface.source_vlan | string }}
{% endif %}
{% endfor %}
{% endif %}
          networkInterfaceMultiqueue: true
          rng: {}
        machine:
          type: pc-q35-rhel9.2.0
        memory:
          guest: {{ vm_memory | default('8') }}Gi
        hostname: {{ inventory_hostname }}
        resources: {}
      networks:
{% if vm_enable_default_network %}
        - pod: {}
          name: default
{% endif %}
{% if vm_networks is defined %}
{% for interface in vm_networks %}
{% if interface.type == "bridge" %}
        - multus:
            networkName: vlan{{ interface.source_vlan | string }}
          name: nic{{ loop.index0 | string }}-{{ interface.source_vlan | string }}
{% endif %}
{% endfor %}
{% endif %}
      terminationGracePeriodSeconds: 180
      volumes:
        - dataVolume:
            name: {{ vm_name }}
          name: rootdisk
        - cloudInitConfigDrive:
            userData: |-
              #cloud-config
              user: cloud-user
              password: {{ ansible_password }}
              chpasswd: { expire: False }
          name: cloudinitdisk