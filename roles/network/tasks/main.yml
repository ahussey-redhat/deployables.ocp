---
# tasks file for network
# - name: Configure router
#   ansible.builtin.copy:
#     content: "{{ hostvars[groups['router'][0]]['router_config'] }}"
#     dest: /conf/config. xml
#   delegate_to: "{{ groups['router'][0] }}"
#   delegate_facts: false
#   register: router_configuration

# - name: Reboot router
#   ansible.builtin.reboot:
#     msg: "Rebooting to apply configuration"
#   delegate_to: "{{ groups['router'][0] }}"
#   delegate_facts: false
#   when: "{{ router_configuration.changed }}"

- name: Ensure configs directory exists
  ansible.builtin.file:
    path: "{{ inventory_dir }}/configs"
    state: directory
    mode: u=rwX,g=rwX,o=-
    owner: "{{ ansible_user_id }}"

- name: Ensure backups directory exists
  ansible.builtin.file:
    path: "{{ inventory_dir }}/configs/backups"
    state: directory
    mode: u=rwX,g=rwX,o=-
    owner: "{{ ansible_user_id }}"

- name: Ensure candidate directory exists
  ansible.builtin.file:
    path: "{{ inventory_dir }}/configs/candidate"
    state: directory
    mode: u=rwX,g=rwX,o=-
    owner: "{{ ansible_user_id }}"

- name: Retrieve current configuration to allow rollback
  juniper.device.config:
    retrieve: committed
    dest_dir: "{{ inventory_dir }}/configs/backups"
    format: set

- name: Create config files
  ansible.builtin.template:
    src: qfx.j2
    dest: "{{ inventory_dir }}/configs/candidate/{{ inventory_hostname }}.set"

- name: Configure host
  juniper.device.config:
    load: set
    src: "{{ inventory_dir }}/configs/candidate/{{ inventory_hostname }}.set"