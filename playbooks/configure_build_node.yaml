---
- name: Configure the Build Node
  hosts: witness
  gather_facts: true
  become: true
  pre_tasks:
    - name: Configure sudoers.d for the Ansible user
      community.general.sudoers:
        name: 010-ansible-user
        state: present
        user: ansible
        runas: ALL
        host: ALL
        commands: ALL
        nopassword: true

    - name: Enable cockpit
      ansible.builtin.systemd:
        name: cockpit.socket
        state: started
        enabled: true

    - name: Register Build Node
      ansible.builtin.import_role:
        name: redhat.rhel_system_roles.rhc

    - name: Configure Cockpit
      ansible.builtin.import_role:
        name: redhat.rhel_system_roles.cockpit

    - name: Update system # noqa: package-latest
      ansible.builtin.dnf:
        name: '*'
        state: latest

    - name: Install useful packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop:
        - tmux

    - name: Install OpenShift Prerequisites (Pulls from Internet)
      ansible.builtin.uri:
        url: "{{ item.url }}"
        owner: root
        mode: u=rwX,g=rwX,o=-
        dest: "{{ item.dest }}"
        decompress: false
        creates: "{{ item.dest }}{{ item.artifact }}"
      loop:
        - url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-client-linux.tar.gz
          dest: /var/tmp/
          artifact: openshift-client-linux.tar.gz
        - url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-install-linux.tar.gz
          dest: /var/tmp/
          artifact: openshift-install-linux.tar.gz
        - url: https://developers.redhat.com/content-gateway/rest/mirror/pub/openshift-v4/clients/mirror-registry/latest/mirror-registry.tar.gz
          dest: /var/tmp/
          artifact: mirror-registry.tar.gz
        - url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/oc-mirror.tar.gz
          dest: /var/tmp/
          artifact: oc-mirror.tar.gz

    - name: Untar the tools
      ansible.builtin.unarchive:
        creates: "{{ item.dest_path }}{{ item.artifact }}"
        dest: "{{ item.dest_path }}"
        mode: u=rx,g=rx,o=rx
        owner: root
        remote_src: true
        src: "{{ item.src_path }}"
      loop:
        - src_path: /var/tmp/openshift-client-linux.tar.gz
          dest_path: /usr/local/bin/
          artifact: oc
        - src_path: /var/tmp/openshift-install-linux.tar.gz
          dest_path: /usr/local/bin/
          artifact: openshift-install
        - src_path: /var/tmp/mirror-registry.tar.gz
          dest_path: /usr/local/bin/
          artifact: mirror-registry
        - src_path: /var/tmp/oc-mirror.tar.gz
          dest_path: /usr/local/bin/
          artifact: oc-mirror

    - name: Ensure openshift-baremetal-install binary is available
      ansible.builtin.copy:
        src: ../openshift-baremetal-install
        dest: /usr/local/bin/openshift-baremetal-install
        owner: root
        group: root
        mode: u=rx,g=rx,o=rx
      become: true
      when: install_method == "ipi"

    - name: Configure pull-secret
      ansible.builtin.copy:
        content: "{\"auths\": {\"{{ groups['witness'][0] }}:8443\": {\"auth\": \"{{ ('init:' + mirror_registry_init_password) | b64encode }}\", \"email\": \"\"}}}" # noqa yaml[line-length]
        dest: /etc/containers/auth.json
        owner: ansible
        group: ansible
        mode: u=rwX,g=rX,o=-

  tasks:
    - name: Provision Quay
      ansible.builtin.import_role:
        name: provision_quay

    - name: Prepare for OpenShift Deployment
      ansible.builtin.import_role:
        name: sno_deploy
      tags:
        - openshift-deploy

- name: Next steps
  hosts: clusters
  become: false
  gather_facts: false
  connection: local
  tasks:
    - name: Message
      ansible.builtin.debug:
        msg: |
          Please review the contents of the install-config.yaml before proceeding.
          You will also need to manually start the RHCOS image cache server
          'podman run -d --name rhcos_image_cache \
          -v /home/ansible/rhcos_image_cache:/var/www/html \
          -p 8080:8080/tcp \
          registry.access.redhat.com/ubi9/httpd-24:latest'
          Then run the installation command
          'openshift-baremetal-install create cluster --dir /home/ansible/{{ cluster_name }}/ --log-level debug'
      when: install_method == "ipi"

    - name: Message
      ansible.builtin.debug:
        msg: |
          Please review the contents of the install-config.yaml and agent-config.yaml
          before proceeding.
          'openshift-install --dir /home/ansible/{{ cluster_name }}/ agent create image'
          Use the iDRAC virtual media to mount the ISO and boot from the ISO
          Montior the installation with:
          'openshift-install --dir /home/ansible/{{ cluster_name }}/ agent wait-for bootstrap-complete --log-level debug'
      when: install_method == "agent"

    # - name: Deploy Satellite Capsule
